using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
// more...
using System.ComponentModel.DataAnnotations;

namespace sep20v1.ViewModels
{
    // Choose unique names for the view model classes
    // Do not re-use the original class name (in the app domain data model)

    // Just the fields that are useful for a lookup list
    public class ProgramList
    {
        public int Id { get; set; }
        public string Code { get; set; }
        public string Name { get; set; }

        // Or, as an alternative to the above two fields...
        public string CodeAndName { get { return Code + " - " + Name; } }
    }

    // A template for displaying public properties, or adding a 'new' Program object
    // Notice that there's no 'Id' field, because that's auto-generated by the data store
    // Data annotations will help improve the quality of data that's coming in
    public class ProgramPublic
    {
        // Reminder - when writing your own property, 
        // create a private field as a backing store
        private string _code = "";

        [Required]
        [RegularExpression("[a-zA-Z]{3}")]
        public string Code
        {
            get { return _code; }
            set { 
                // Make sure the incoming data gets set to upper case
                _code = value.ToUpper(); 
            }
        }

        [Required]
        [StringLength(100)]
        public string Name { get; set; }

        [Required]
        [StringLength(5000)]
        public string Description { get; set; }

        [Range(2, 8)]
        public int Semesters { get; set; }

        [Required]
        [StringLength(50)]
        public string Credential { get; set; }
    }

    // For get-some and get-one tasks
    // For this entity, can also be used for editing
    public class ProgramBase : ProgramPublic
    {
        public int Id { get; set; }
    }

    // All fields to be viewed or edited (by trusted users)
    public class ProgramFull : ProgramBase
    {
        public DateTime DateCreated { get; set; }
    }

    // ProgramFull, with associated SubjectFull objects
    public class ProgramWithSubjects : ProgramFull
    {
        public ICollection<SubjectFull> Subjects { get; set; }
    }

}
